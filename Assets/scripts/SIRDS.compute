// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel Noise

// Noisy texture
RWTexture2D<float4> Result;




// Hash function from H. Schechter & R. Bridson, goo.gl/RXiKaH .
// Returns a normalized float between 0 and 1
float Hash(uint s)
{
	s ^= 2747636419u;
	s *= 2654435769u;
	s ^= s >> 16;
	s *= 2654435769u;
	s ^= s >> 16;
	s *= 2654435769u;
	return float(s) / 4294967295.0;	// normalize between 0 and 1
}


// Kernel to generate noise based on the position of the pixel.
// Input: Position as uint3 with the 3rd dimension being ignored (2d surface).
// Output: Floatingpoint value between 0 and 1.
[numthreads(8,8,1)]
void Noise (uint3 id : SV_DispatchThreadID)
{
	Result[id.xy] = Hash(1024*id.y + id.x);
}

